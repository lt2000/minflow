global_input:
  count:
    type: pass
    value:
      function: INPUT
      parameter: count
    size: 8
functions:
- name: rand
  source: rand
  runtime: 1
  scale: 3
  mem_usage: 0.25
  input:
    count:
      type: normal
      value:
        function: INPUT
        parameter: count
      size: 8
  output:
    split_keys:
      type: keys
      size: 8
    rand_result:
      type: normal
      size: 8
  next:
    type: foreach
    nodes:
    - square
- name: square
  source: square
  runtime: 1
  scale: 3
  mem_usage: 0.25
  split_ratio: 3
  input:
    x:
      type: key
      value:
        function: rand
        parameter: split_keys
      size: 8
    content:
      type: normal
      value:
        function: rand
        parameter: rand_result
      size: 8
  output:
    square_result:
      type: normal
      size: 8
  next:
    type: pass
    nodes:
      - add
- name: add
  source: add
  runtime: 1
  scale: 3
  mem_usage: 0.25
  input:
    x:
      type: key
      value:
        function: rand
        parameter: split_keys
      size: 8
    content:
      type: normal
      value:
        function: square
        parameter: square_result
      size: 8
  output:
    add_result:
      type: normal
      size: 8
global_output:
  result:
    type: pass
    value:
      function: add
      parameter: add_result
